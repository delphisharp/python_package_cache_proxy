worker_processes  1;
pid        /tmp/nginx.pid;

events {
   worker_connections  1024;
}

#  quetz
http {
   map $cache $control {
      1       "max-age=1200";
   }
   map $uri $cache {
      ~*\.(json)$    1;
   }

   map $http_x_forwarded_proto $x_scheme {
    default $scheme;
    http http;
    https https;
    }

   proxy_temp_path /tmp/proxy_temp;
   client_body_temp_path /tmp/client_temp;
   fastcgi_temp_path /tmp/fastcgi_temp;
   uwsgi_temp_path /tmp/uwsgi_temp;
   scgi_temp_path /tmp/scgi_temp;

   include       mime.types;
   default_type  application/octet-stream;

   sendfile        on;
   tcp_nopush      on;
   tcp_nodelay     on;

   keepalive_timeout  120;

   gzip  on;
   gzip_types  application/json;

   client_max_body_size 1024m;

   upstream quetz {
      server conda_proxy:8001;
   }

   server {
      listen      8003;
      add_header  Cache-Control $control;

      server_name  localhost;

      location / {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://quetz;
      }

      location /files/channels/ {
        # path for channels
        alias /app/quetz/channels/;

      #   secure_link $arg_md5,$arg_expires;
      #   secure_link_md5 "$secure_link_expires$file_name mysecrettoken";

      #   if ($secure_link = "") { return 403; }
      #   if ($secure_link = "0") { return 410; }
      }
   }

   map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
   }

#    devpi
   server {
    server_name localhost $hostname "";
    listen 8004;
    gzip             on;
    gzip_min_length  2000;
    gzip_proxied     any;
    # add application/vnd.pypi.simple.v1+json to the gzip_types
    gzip_types  text/plain text/css text/xml
                application/json application/vnd.pypi.simple.v1+json
                application/javascript text/javascript
                application/xml application/xml+rss;

    proxy_read_timeout 120s;
    client_max_body_size 1024m;

    # set to where your devpi-server state is on the filesystem
    root /app/devpi;

    # try serving static files directly
    location ~ /\+f/ {
        # workaround to pass non-GET/HEAD requests through to the named location below
        error_page 418 = @proxy_to_app;
        if ($request_method !~ (GET)|(HEAD)) {
            return 418;
        }

        expires max;
        try_files /+files$uri @proxy_to_app;
    }

    # try serving docs directly
    location ~ /\+doc/ {
        # if the --documentation-path option of devpi-web is used,
        # then the root must be set accordingly here
        root /tmp/home/mydevpiserver;
        try_files $uri @proxy_to_app;
    }

    location / {
        # workaround to pass all requests to / through to the named location below
        error_page 418 = @proxy_to_app;
        return 418;
    }

    location @proxy_to_app {
        proxy_pass http://pypi_proxy:8002;
        # the $x_scheme variable is only required if nginx is behind another
        # proxy (often the case in container environments),
        # if your nginx is the only proxy server, the $scheme variable can be
        # used and the map $http_x_forwarded_proto $x_scheme above be removed
        proxy_set_header X-Forwarded-Proto $x_scheme;
        proxy_set_header X-outside-url $x_scheme://$http_host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
}
